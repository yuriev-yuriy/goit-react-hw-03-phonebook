{"version":3,"sources":["Phonebook/ContactForm.js","Phonebook/Filter.js","Phonebook/ContactList.js","App.js","index.js","App.module.css"],"names":["ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","changeNameInput","event","setState","currentTarget","value","changeNumberInput","makeSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","id","type","onChange","required","className","s","Btn","Component","Filter","ContactList","contacts","delMethot","map","onClick","defaultProps","App","filter","addName","newContact","keys","contact","Object","values","toLowerCase","split","reduce","acc","key","concat","includes","alert","onFilterChange","getFilteredContacts","normalizedFilter","deleteItem","prevState","prevProps","localStorage","setItem","JSON","stringify","parsedContacts","parse","getItem","filteredContacts","Wrapper","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.060798d8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from '../App.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  reset() {\n    this.setState({ name: '', number: '' });\n  }\n\n  changeNameInput = event => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  changeNumberInput = event => {\n    this.setState({ number: event.currentTarget.value });\n  };\n\n  makeSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.reset();\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.makeSubmit}>\n          <label htmlFor={this.nameInputId}>\n            Name\n            <input\n              id={this.nameInputId}\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.changeNameInput}\n              required\n            />\n          </label>\n\n          <label htmlFor={this.numberInputId}>\n            Number\n            <input\n              id={this.numberInputId}\n              type=\"tel\"\n              value={this.state.number}\n              onChange={this.changeNumberInput}\n              required\n            />\n          </label>\n          <button className={s.Btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ value, onSubmit }) => {\n  return (\n    <>\n      <p>Find contacts by name </p>\n      <input type=\"text\" value={value} onChange={onSubmit} />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, delMethot }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}:{number}\n          <button onClick={() => delMethot(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nContactList.defaultProps = {\n  name: '',\n  number: '',\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  delMethot: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Phonebook/ContactForm';\nimport Filter from './Phonebook/Filter';\nimport ContactList from './Phonebook/ContactList';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addName = (name, number) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const keys = this.state.contacts.map(contact =>\n      Object.values(contact.name.toLowerCase().split(', ')),\n    );\n    const arrayOfNames = Object.keys(keys).reduce(function (acc, key) {\n      return acc.concat(keys[key]);\n    }, []);\n    const repeatedName = arrayOfNames.includes(name.toLowerCase());\n\n    if (!repeatedName) {\n      this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  onFilterChange = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(normalizedFilter),\n    );\n  };\n\n  deleteItem = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className={s.App}>\n        <div className={s.Wrapper}>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addName} />\n\n          <h2>Contacts</h2>\n          <Filter value={this.state.filter} onSubmit={this.onFilterChange} />\n          <ContactList\n            contacts={filteredContacts}\n            delMethot={this.deleteItem}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3bj3F\",\"Wrapper\":\"App_Wrapper__1PCF2\",\"Btn\":\"App_Btn__3Uc5Q\"};"],"sourceRoot":""}